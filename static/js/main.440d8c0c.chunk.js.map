{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectedTodoId","selectedTodo","selectTodo","filter","search","todosForRender","todo","all","completed","active","Error","title","toLowerCase","includes","className","map","id","color","type","onClick","TodoFilter","setFilter","searchQuery","setSearch","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","response","ok","json","reject","status","Loader","TodoModal","unselectTodo","useState","user","setUser","foundTodo","find","userId","useEffect","getUser","error","href","email","name","App","setTodos","setTodoId","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.440d8c0c.chunk.js","sourcesContent":["export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: number | null;\n  selectTodo: (todoId: number) => void;\n  filter: string;\n  search: string;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo: selectedTodoId,\n  selectTodo,\n  filter,\n  search,\n}) => {\n  const todosForRender = todos\n    .filter((todo: Todo) => {\n      switch (filter) {\n        case Filter.all:\n          return todo;\n        case Filter.completed:\n          return todo.completed;\n        case Filter.active:\n          return !todo.completed;\n        default:\n          throw new Error('Something went wrong with the filtering');\n      }\n    })\n    .filter((todo: Todo) => {\n      return todo.title.toLowerCase().includes(search.toLowerCase());\n    });\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todosForRender.map(({ id, title, completed }: Todo) => {\n          const color = completed ? 'success' : 'danger';\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">\n                {id}\n              </td>\n              {completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={`has-text-${color}`}>\n                  {title}\n                </p>\n              </td>\n              {selectedTodoId === id ? (\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                </td>\n              ) : (\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => selectTodo(id)}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                </td>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../../types/Filter';\n\ntype Props = {\n  filter: string,\n  setFilter: (value: string) => void,\n  searchQuery: string,\n  setSearch: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  setFilter,\n  searchQuery,\n  setSearch,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <div className=\"control\">\n        <div className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => setFilter(event.target.value)}\n          >\n            <option value={Filter.all}>\n              All\n            </option>\n            <option value={Filter.active}>\n              Active\n            </option>\n            <option value={Filter.completed}>\n              Completed\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(event) => setSearch(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearch('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error(`${response.status}`));\n      }\n\n      return response.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: number;\n  unselectTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  unselectTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n  const foundTodo = todos.find(todo => todo.id === selectedTodo);\n\n  if (foundTodo) {\n    const {\n      id,\n      completed,\n      userId,\n      title,\n    } = foundTodo;\n\n    const color = completed ? 'success' : 'danger';\n\n    useEffect(() => {\n      try {\n        getUser(userId)\n          .then(setUser);\n      } catch (error) {\n        throw new Error(`User: ${userId} not found. Error: ${error}`);\n      }\n    }, [selectedTodo]);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {user ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={unselectTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className={`has-text-${color}`}>\n                  {completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        ) : <Loader />}\n      </div>\n    );\n  }\n\n  throw new Error('No todo found');\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setTodoId] = useState<number | null>(null);\n  const [filter, setFilter] = useState<string>(Filter.all);\n  const [search, setSearch] = useState<string>('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                searchQuery={search}\n                setSearch={setSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n\n              <TodoList\n                todos={todos}\n                selectedTodo={selectedTodoId}\n                selectTodo={setTodoId}\n                filter={filter}\n                search={search}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodoId && (\n        <TodoModal\n          todos={todos}\n          selectedTodo={selectedTodoId}\n          unselectTodo={() => setTodoId(0)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}