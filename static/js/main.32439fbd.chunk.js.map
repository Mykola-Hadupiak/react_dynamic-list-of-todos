{"version":3,"sources":["types/FilterBy.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterBy","TodoItem","todo","selectedTodo","onSelectedTodo","id","title","completed","className","cn","type","onClick","TodoList","todos","filter","query","ACTIVE","COMPLETED","filteredTodos","toLowerCase","includes","trim","map","TodoFilter","onFilterBy","onQuery","onChange","event","target","value","ALL","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","isError","setIsError","loadUser","a","userId","userFromServer","useEffect","href","email","name","App","setTodos","filterBy","setFilterBy","setQuery","setSelectedTodo","loadTodos","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32439fbd.chunk.js","sourcesContent":["export enum FilterBy {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  selectedTodo: Todo | null;\n  onSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoItem:React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  onSelectedTodo,\n}) => {\n  const { id, title, completed } = todo;\n\n  return (\n    <tr data-cy=\"todo\" className=\"has-background-info-lightDELE\">\n      <td className=\"is-vcentered\">\n        {id}\n      </td>\n      {completed ? (\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n      ) : (\n        <td className=\"is-vcentered\" />\n      )}\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({\n          'has-text-success': completed,\n          'has-text-danger': !completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onSelectedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far',\n                selectedTodo?.id === id ? 'fa-eye-slash' : 'fa-eye')}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\nimport { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  todos: Todo[];\n  filter: FilterBy;\n  query: string;\n  selectedTodo: Todo | null,\n  onSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  filter,\n  query,\n  selectedTodo,\n  onSelectedTodo,\n}) => {\n  const filteredTodos = () => {\n    switch (filter) {\n      case FilterBy.ACTIVE:\n        return todos.filter(todo => !todo.completed);\n\n      case FilterBy.COMPLETED:\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  const todosToRender = () => filteredTodos()\n    .filter(todo => {\n      return todo.title.toLowerCase()\n        .includes(query.toLowerCase().trim());\n    });\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todosToRender().map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            selectedTodo={selectedTodo}\n            onSelectedTodo={onSelectedTodo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  filter: FilterBy;\n  onFilterBy: (filter: FilterBy) => void;\n  query: string;\n  onQuery: (str: string) => void;\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  filter,\n  onFilterBy,\n  query,\n  onQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => onFilterBy(event.target.value as FilterBy)}\n            value={filter}\n          >\n            <option\n              value={FilterBy.ALL}\n            >\n              All\n            </option>\n            <option\n              value={FilterBy.ACTIVE}\n            >\n              Active\n            </option>\n            <option\n              value={FilterBy.COMPLETED}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => onQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            <button\n              aria-label=\"clear\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQuery('')}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo;\n  onSelectedTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState('');\n\n  const loadUser = async () => {\n    try {\n      setIsLoading(true);\n      const userFromServer = await getUser(selectedTodo?.userId);\n\n      setUser(userFromServer);\n    } catch {\n      setIsError('No todo found');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(isLoading && !isError) && (\n        <Loader />\n      )}\n\n      {(isError && !isLoading) && (\n        { isError }\n      )}\n\n      {(!isError && !isLoading && user) && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            <button\n              aria-label=\"close\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">\n                  Done\n                </strong>\n              ) : (\n                <strong className=\"has-text-danger\">\n                  Planned\n                </strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterBy } from './types/FilterBy';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState('');\n  const [filterBy, setFilterBy] = useState(FilterBy.ALL);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const loadTodos = async () => {\n    try {\n      setIsLoading(true);\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n    } catch {\n      setIsError('Cannot load Todos');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const handleCloseTodoInfo = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filterBy}\n                onFilterBy={setFilterBy}\n                query={query}\n                onQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {(isLoading && !isError) && (\n                <Loader />\n              )}\n\n              {(isError && !isLoading) && (\n                { isError }\n              )}\n\n              {(!isError && !isLoading) && (\n                <TodoList\n                  todos={todos}\n                  filter={filterBy}\n                  query={query}\n                  selectedTodo={selectedTodo}\n                  onSelectedTodo={setSelectedTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSelectedTodo={handleCloseTodoInfo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}